{"version":3,"file":"static/js/207.dda28d51.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","pages/Contacts/Contacts.styled.js","components/Form/ContactForm/ContactForm.styled.js","components/Form/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/ContactList/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 15px;\n\n  @media screen and (min-width: 426px) {\n    padding: 32px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  font-size: 32px;\n  background: -webkit-linear-gradient(#0cf, #5a5a5a);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    margin-bottom: 25px;\n    font-size: 52px;\n  }\n`;\nexport const Caption = styled.h2`\n  margin-bottom: 15px;\n  font-size: 22px;\n  background: -webkit-linear-gradient(#438dff, #2f2f2f);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    margin-bottom: 25px;\n    font-size: 30px;\n  }\n`;\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\nimport { BsTelephonePlus } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 25px;\n  max-width: 250px;\n\n  @media screen and (min-width: 426px) {\n    max-width: 450px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  background: -webkit-linear-gradient(#438dff, #2f2f2f);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    font-size: 30px;\n  }\n`;\n\nexport const TextFieldStyled = styled(TextField)`\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: border 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    outline: rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  cursor: pointer;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    color: #ebf4f8;\n    background-color: #002359c4;\n  }\n`;\n\nexport const IconBtn = styled(BsTelephonePlus)`\n  margin-left: 10px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContacts } from 'redux/contacts/contacts-operations';\n\nimport { Form, Title, TextFieldStyled, Button, IconBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const state = useSelector(state => state);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n\n    const isIncludesName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (!isIncludesName) {\n      dispatch(addContacts({ name, number }));\n      event.target.reset();\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n    console.log(state);\n    console.log(contacts);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>Add your contacts</Title>\n      <TextFieldStyled id=\"name\" type=\"text\" label=\"Name\" autoFocus required fullWidth />\n      <TextFieldStyled id=\"number\" type=\"tel\" label=\"Number\" required fullWidth />\n\n      <Button type=\"submit\">\n        Add contact\n        <IconBtn />\n      </Button>\n    </Form>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  }\n);\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  color: #002359c4;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: border 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    outline: rgba(0, 0, 0, 0);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { Div, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <Div>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={event => handleFilterChange(event.target.value)}\n      ></Input>\n    </Div>\n  );\n};\n","import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"#438dff\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{ margin: '0 auto', display: 'block' }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Items = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 3vw;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 1em;\n  }\n`;\n\nexport const Link = styled.a`\n  color: blue;\n  transition: color 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: green;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 2px 4px;\n  text-align: center;\n  cursor: pointer;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ca0505;\n    color: #ebf4f8;\n    background-color: #b71111;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsTelephone } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContacts } from 'redux/contacts/contacts-operations';\n\nimport { Items, Link, Button } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <Items>\n      <Link href=\"tel:{number}\">\n        <BsTelephone />\n      </Link>\n      <p>\n        {name}: {number}\n      </p>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Items>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 500px;\n  padding: 8px;\n\n  background-color: #ebf4f8;\n  box-shadow: 10px 10px 10px 0px rgb(108, 108, 108);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/filter/filter-selectors';\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\n\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactListItem id={id} name={name} number={number} key={id} />\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\n\nimport { Wrapper, Title, Caption } from './Contacts.styled';\n\nimport { ContactForm } from 'components/Form/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactsItems = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n\n      <ContactForm />\n\n      <Caption>Contacts</Caption>\n      {contactsItems.length > 0 && <Filter />}\n      {isLoading && !error && <Loader />}\n      {contactsItems.length > 0 && <ContactList />}\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Wrapper","styled","Title","Caption","Form","TextFieldStyled","TextField","Button","IconBtn","BsTelephonePlus","ContactForm","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","name","target","elements","value","number","some","contact","toLowerCase","alert","addContacts","reset","console","log","id","type","label","autoFocus","required","fullWidth","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","trim","includes","Div","Label","Input","Filter","htmlFor","onChange","setFilter","handleFilterChange","Loader","height","width","color","ariaLabel","wrapperStyle","margin","display","wrapperClass","visible","Items","Link","ContactListItem","href","onClick","deleteContacts","List","ContactList","visibleContacts","map","contactsItems","useEffect","fetchContacts","length"],"sourceRoot":""}